Snippet 5.1.2

private async void OnExportBoardingPass(object sender, RoutedEventArgs e)
{
    progressBar.IsActive = true;

    var savePicker = new FileSavePicker();
    savePicker.SuggestedStartLocation = PickerLocationId.Desktop;
    // Dropdown of file types the user can save the file as
    savePicker.FileTypeChoices.Add("Plain Text", new List<string>() { ".txt" });
    // Default file name if the user does not type one in or select a file to replace
    savePicker.SuggestedFileName = "BoardingPass";

    var file = await savePicker.PickSaveFileAsync();

    if (file != null)
    {
        //we simulate that the exporting operation takes a while to be completed
        await Task.Delay(5000);

        var builder = new StringBuilder();
        builder.AppendLine("Boarding pass generated by FlightTracker");
        builder.AppendLine("-----------------------------------------");
        builder.AppendLine($"Flight code: {codeTextbox.Text}");
        builder.AppendLine($"Flight date: {dateTextbox.Text}");
        builder.AppendLine($"Departure city: {departureTextbox.Text}");
        builder.AppendLine($"Arrival city: {arrivalTextbox.Text}");
        builder.AppendLine("-----------------------------------------");
        builder.AppendLine("Thank you for using FlightTracker");

        await FileIO.WriteTextAsync(file, builder.ToString());

        ShowNotification();
    }

    progressBar.IsActive = false;
}